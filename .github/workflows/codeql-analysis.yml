name: "CodeQL - Security Analysis"

on: [pull_request]

#on:
#  push:
#    branches: [master, 4.4.x]
#  pull_request:
    # The branches below must be a subset of the branches above
#    branches: [master]
#  schedule:
#    - cron: '0 3 * * 3'

jobs:
  analyse:
    name: Analyse
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
         fetch-depth: 2
    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      ########################
      - name: Set up Native Selenium Grid
        run: docker-compose -f docker-compose_native.yml up --scale chrome=4 --remove-orphans -d
      ########################
      - name: Set up JDK 15
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 15
    # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
      # Override language selection by uncommenting this and choosing your languages
        with:
         languages: java
      #   languages: go, javascript, csharp, python, cpp, java

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    #- name: Autobuild
    #  uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release
      - name: Run all tests
        continue-on-error: true
        run: mvn test -DexecutionAddress="localhost:4444" -DtargetOperatingSystem="Linux-64" -DmaximumPerformanceMode="true" -DtargetBrowserName="GoogleChrome" -Dtest="!%regex[.*checksum.*], !%regex[.*cucumber.*], !%regex[.*sikulix.*], !%regex[.*imageComparison.*], !%regex[.*FileActions.*], !%regex[.*TerminalActions.*], !%regex[.*localShell.*], !%regex[.*fullPageScreenshotWithHeader.*], !%regex[.*dbConnection.*], !%regex[.*Appium.*]"
      ########################
      - name: Generate Allure Report with history
        uses: simple-elf/allure-report-action@v1.3
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_version: 2.13.6
          gh_pages: gh-pages
          allure_history: allure-history
          subfolder: allure
          github_run_num: ${{ github.run_number }}
          github_run_id: ${{ github.run_id }}
          github_repo: ${{ github.repository }}
          github_repo_owner: ${{ github.repository_owner }}
      ########################
#       - name: Deploy report to Github Pages
#         uses: peaceiris/actions-gh-pages@v3.7.3
#         with:
#           personal_token: ${{ secrets.PERSONAL_TOKEN }}
#           publish_dir: allure-history/allure
#           destination_dir: allure
#           publish_branch: gh-pages
      ########################
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
