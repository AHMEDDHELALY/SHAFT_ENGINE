name: jFrog Continuous Delivery
# Run This file manually if you want to create a new SHAFT_Engine release
# This pipeline will create the release, upload the artifacts, and deploy the configuration manager/javadocs site

on:
  workflow_dispatch:

jobs:
  build_release_and_deliver:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Install SHAFT
        continue-on-error: true
        run: mvn clean install -DskipTests
      - name: Update Configuration Manager
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "mohab.mohieeldeen@outlook.com"
          git config --global user.name "Mohab Mohie"
          mvn resources:resources javadoc:javadoc scm-publish:publish-scm
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      - name: Verifying Artifactory is Accessible
        run: |
          jf rt ping
      - name: Uploading Files
        run: |
          jf rt u "/home/runner/.m2/repository/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/*.jar" "SHAFT_ENGINE/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/" --flat=true --detailed-summary=true
          jf rt u "/home/runner/.m2/repository/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/*.pom" "SHAFT_ENGINE/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/" --flat=true --detailed-summary=true
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1.11.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: false
          generateReleaseNotes: true
          name: ${{ env.RELEASE_VERSION }}
          tag: ${{ env.RELEASE_VERSION }}