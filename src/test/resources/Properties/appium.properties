###################################################
##### SHAFT_Engine Execution Properties
###################################################
# You can add any property from this list, just make sure to add [appium_] as a prefix: http://appium.io/docs/en/writing-running-appium/caps/
# Note: Empty values will be ignored
#
##### Execution Platform
appium_platformName=Android
# Which mobile OS platform to use: iOS | Android | FirefoxOS
appium_platformVersion=10.0
# Mobile OS version. e.g., 10.0, 11.2.2
appium_deviceName=Pixel_3a_API_29
# The kind of mobile device or emulator to use, On iOS, this should be one of the valid devices returned by instruments with instruments -s devices. On Android this capability is currently ignored, though it remains required.
appium_automationName=Appium
# Which automation engine to use: Appium | UiAutomator2 | Espresso for Android, or XCUITest for iOS or YouiEngine for application built with You.i Engine
appium_udid=emulator-5554
# Unique device identifier of the connected physical device
appium_app=https://github.com/appium/appium/raw/master/sample-code/apps/ApiDemos-debug.apk
# The absolute local path or remote http URL to a .ipa file (IOS), .app folder (IOS Simulator), .apk file (Android) or .apks file (Android App Bundle), or a .zip file containing one of these. Appium will attempt to install this app binary on the appropriate device first. Note that this capability is not required for Android if you specify appPackage and appActivity capabilities (see below). UiAutomator2 and XCUITest allow to start the session without app or appPackage. Incompatible with browserName. See here about .apks file.
# e.g., /abs/path/to/my.apk or http://myapp.com/app.ipa
appium_browserName=
# Name of mobile web browser to automate. Should be an empty string if automating an app instead.
# Safari | Chrome | Chromium | Browser
appium_appPackage=
# ANDROID ONLY
# Java package of the Android app you want to run. By default this capability is received from the package manifest (@package attribute value)
# e.g., com.example.android.myApp, com.android.settings
appium_appActivity=
# ANDROID ONLY
# Activity name for the Android activity you want to launch from your package. This often needs to be preceded by a . (e.g., .MainActivity instead of MainActivity). By default this capability is received from the package manifest (action: android.intent.action.MAIN , category: android.intent.category.LAUNCHER)
# .MainActivity, .Settings
###################################################
##### END of Properties File
###################################################